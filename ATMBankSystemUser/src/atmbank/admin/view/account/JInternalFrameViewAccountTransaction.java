/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package atmbank.admin.view.account;

import atmbank.admin.controllers.AccountController;
import atmbank.admin.controllers.TransactionController;
import atmbank.admin.model.Account;
import atmbank.admin.model.SystemUser;
import atmbank.admin.model.CustomerTransaction;
import atmbank.admin.security.SystemValidation;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;


/**
 *
 * @author Xuan Nguyen
 */
public class JInternalFrameViewAccountTransaction extends javax.swing.JInternalFrame {
    Account account;
    TransactionController transactionController;
    int AmountRequest,type;
    float money;
    String Amount,reason;
    SystemValidation valid;
    CustomerTransaction transaction;
    boolean ValidAmount = false;
    boolean ValidResson = false;
    SystemUser SystemUser;
    AccountController accountController;
    /**
     * Creates new form JInternalFrameViewAccountTransaction
     */
    public JInternalFrameViewAccountTransaction(Account account,int type,SystemUser SystemUser) {
        this.account = account;
        this.type = type;
        this.SystemUser = SystemUser;
        initComponents();
        loadInforAccount();
        valid = new SystemValidation();
    }
    private void loadInforAccount(){
        lblAccNo.setText("Account No. " + account.getAccNo());
        transactionController = new TransactionController();
        switch(type){
            case 1:
                AmountRequest = (25000 - transactionController.GetSumAmountToDayDeposit(account.getAccID(), "Deposit"));
                lblGetEnterAmount.setText(AmountRequest + "");
                this.setTitle("Deposit - Transaction");
                break;
            case 2 :
                AmountRequest = (25000 - transactionController.GetSumAmountToDayDeposit(account.getAccID(), "Withdraw"));
                lblGetEnterAmount.setText(AmountRequest + "");
                this.setTitle("Withdraw - Transaction");    
                break;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAccNo = new javax.swing.JLabel();
        lblTransaction = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblLbReason = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taReason = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnSubmit = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtAmount = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        lblIconAmount = new javax.swing.JLabel();
        lblIconReason = new javax.swing.JLabel();
        lblGetEnterAmount = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Transaction");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon48x48_money.png"))); // NOI18N

        lblAccNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblAccNo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAccNo.setText("Account No. 0000-0000-0000-0000");

        lblTransaction.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTransaction.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTransaction.setText("Enter amount not more than $");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Amount:");

        lblLbReason.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLbReason.setText("Reason:");

        taReason.setColumns(20);
        taReason.setRows(5);
        taReason.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                taReasonFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(taReason);

        btnSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon22x22_ok.png"))); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        jPanel1.add(btnSubmit);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon22x22_refresh.png"))); // NOI18N
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon22x22_cancel.png"))); // NOI18N
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);

        txtAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAmountFocusGained(evt);
            }
        });

        jLabel1.setText("Note : 12345 or 12,345");

        lblIconAmount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon24x24_incorrect.png"))); // NOI18N

        lblIconReason.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon24x24_incorrect.png"))); // NOI18N

        lblGetEnterAmount.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblGetEnterAmount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGetEnterAmount.setText("25000000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLbReason)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(txtAmount)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIconAmount)
                    .addComponent(lblIconReason))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lblTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGetEnterAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblAccNo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGetEnterAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblIconAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblLbReason))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblIconReason, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void CheckAmount(){
        Amount = txtAmount.getText();
        ValidAmount = true;
        if(!valid.validateMoney(Amount)){
            ValidAmount = false;
        }else if(SystemValidation.ConvertFloatMoney(Amount) > AmountRequest){
            ValidAmount = false;
        }
        lblIconAmount.setIcon(ValidAmount ? SystemValidation.CORRECT_ICON: SystemValidation.INCORRECT_ICON);
    }
    private void CheckReason(){
        ValidResson = true;
        if(taReason.getText().trim().equals("")){
            ValidResson = false;
        }
        lblIconReason.setIcon(ValidResson ? SystemValidation.CORRECT_ICON: SystemValidation.INCORRECT_ICON);
    }    
    private void taReasonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_taReasonFocusGained
        taReason.selectAll();
        taReason.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                CheckReason(); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                CheckReason(); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
               CheckReason(); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }//GEN-LAST:event_taReasonFocusGained
    private void getDataForm(){
        money =  SystemValidation.ConvertFloatMoney(txtAmount.getText());
        reason = taReason.getText();
    }
    private void Deposit(){
        int countDeposit = transactionController.GetCountTransactionToDay(account.getAccID(), "Deposit");
            if(countDeposit < 5){
             int check = JOptionPane.showConfirmDialog(null, "Do you want deposit Account No.: " + account.getAccNo() + "with amount : " + txtAmount.getText(),"Deposit - Transaction",JOptionPane.YES_NO_CANCEL_OPTION);
                if(check == JOptionPane.YES_OPTION){
                    transaction = new CustomerTransaction();
                    transaction.setAccID(account);
                    transaction.setAdminID(SystemUser);
                    transaction.setTranAmount(money);
                    transaction.setTranBalance(account.getAccBalance() + money);
                    transaction.setTranReason(reason);
                    transaction.setTranType("Deposit");
                    transactionController.InsertTransaction(transaction);
                    accountController.UpdateBalanceDeposit(account, money);
                    JOptionPane.showMessageDialog(null, "Deposited successfully","Deposit - Transaction",JOptionPane.INFORMATION_MESSAGE);
                    lblGetEnterAmount.setText(SystemValidation.ConvertFloatToString(AmountRequest - money)+"");
                    transactionController.close();
                    accountController.close();
                    AmountRequest = (int) SystemValidation.ConvertFloatMoney(lblGetEnterAmount.getText());
            }
            }else{
                JOptionPane.showMessageDialog(null, "You can deposit 5 times","Deposit - Transaction",JOptionPane.ERROR_MESSAGE);
            }
    }
private void Withdraw(){
        int countWithdraw = transactionController.GetCountTransactionToDay(account.getAccID(), "Withdraw");
        accountController = new AccountController();
        float balance = accountController.getBalanceAccountByID(account.getAccID());
        if(SystemValidation.ConvertFloatMoney(txtAmount.getText()) < balance){
            if(countWithdraw < 5){
                 int check = JOptionPane.showConfirmDialog(null, "Do you want withdraw Account No.: " + account.getAccNo() + "with amount : $" + txtAmount.getText(),"Deposit - Transaction",JOptionPane.YES_NO_CANCEL_OPTION);
                    if(check == JOptionPane.YES_OPTION){
                        transaction = new CustomerTransaction();
                        transaction.setAccID(account);
                        transaction.setAdminID(SystemUser);
                        transaction.setTranAmount(money);
                        transaction.setTranBalance(account.getAccBalance() - money);
                        transaction.setTranReason(reason);
                        //transaction.setTranDate(Calendar.getInstance());
                        transaction.setTranType("Withdraw");
                        transactionController.InsertTransaction(transaction);
                        accountController.UpdateBalanceWithdraw(account, money);
                        JOptionPane.showMessageDialog(null, "Withdraw successfully","Withdraw - Transaction",JOptionPane.INFORMATION_MESSAGE);
                        lblGetEnterAmount.setText(SystemValidation.ConvertFloatToString(AmountRequest - money)+"");
                        transactionController.close();
                        accountController.close();
                        AmountRequest = (int) SystemValidation.ConvertFloatMoney(lblGetEnterAmount.getText());
                }
            }else{
                JOptionPane.showMessageDialog(null, "You can deposit 5 times");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Amount entered not more than balance of account","Deposit - Transaction",JOptionPane.ERROR_MESSAGE);
        }
    }    
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        //float ResultAmount = SystemValidation.ConvertFloatMoney(txtx)
        if(money < AmountRequest && ValidResson && ValidAmount){
            getDataForm();
            transactionController = new TransactionController();
            accountController = new AccountController();
                if(type == 1){
                        Deposit();
                }else if(type == 2){
                        Withdraw();
                }
        }else{
            JOptionPane.showMessageDialog(null,"Please check fields","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAmountFocusGained
        // TODO add your handling code here:
        txtAmount.selectAll();
        txtAmount.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
               CheckAmount(); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                CheckAmount(); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                CheckAmount(); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }//GEN-LAST:event_txtAmountFocusGained

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        txtAmount.setText("");
        taReason.setText("");
        ValidAmount = false;
        ValidResson = false;
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccNo;
    private javax.swing.JLabel lblGetEnterAmount;
    private javax.swing.JLabel lblIconAmount;
    private javax.swing.JLabel lblIconReason;
    private javax.swing.JLabel lblLbReason;
    private javax.swing.JLabel lblTransaction;
    private javax.swing.JTextArea taReason;
    private javax.swing.JFormattedTextField txtAmount;
    // End of variables declaration//GEN-END:variables
}
